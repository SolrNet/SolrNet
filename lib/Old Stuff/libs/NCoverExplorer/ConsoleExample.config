<?xml version="1.0" encoding="utf-8"?>
<!-- Example configuration file to be passed to NCoverExplorer-Console.exe using /config: switch  -->
<!-- If not supplied, then the same defaults will be used as the NCoverExplorer GUI. -->
<ConsoleSetting xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- Name attribute is title to appear on the report (equivalent to /project:xx). Default is blank. -->
  <ProjectName>Example.Project</ProjectName>

  <!-- Names of the coverage files to merge/report on. Wildcards can be used. -->
  <CoverageFileNames>
    <CoverageFileName>*.Coverage.xml</CoverageFileName>
  </CoverageFileNames>

  <!-- Report to be generated by running NCoverExplorer.Console. Default is "None". Other possible values are:
	  "ModuleSummary", "ModuleNamespaceSummary",
	  "ModuleClassSummary", "ModuleClassFunctionSummary"
  -->
  <ReportType>ModuleClassSummary</ReportType>
  <!-- Filename for the output html report if wanting to generate one. -->
  <HtmlReportFileName>C:\MyCoverageReport.html</HtmlReportFileName>
  <!-- Filename for the output xml report (for use by cc.net) if wanting to generate one. -->
  <XmlReportFileName>C:\MyCoverageReport.xml</XmlReportFileName>
  
  <!-- File name for the output merged coverage.xml file if any resulting from merging the inputs. -->
  <!--<MergeFileName>C:\MyCoverageMerged.xml</MergeFileName>-->
  
  <!-- Whether to show the excluded elements in the footer of the output report if being generated. Default is false. -->
  <!--<ShowExcludedFooter>True</ShowExcludedFooter>-->
  
  <!-- Whether to suppress virtually all console output when running. Default is false. -->
  <!--<NoLog>True</NoLog>-->

  <!-- Threshold for acceptance criteria for coverage reports detailing acceptable coverage levels. Default is 95% -->
  <!--<SatisfactoryCoverageThreshold>95</SatisfactoryCoverageThreshold>-->
  
  <!-- Threshold for acceptance criteria for coverage reports detailing acceptable coverage as #seqPts rather than %. Default is 0. -->
  <!--<SatisfactoryUnvisitedSequencePoints>2</SatisfactoryUnvisitedSequencePoints> -->
  
  <!-- Threshold for acceptance criteria for coverage reports detailing acceptable function coverage levels. Default is 80% -->
  <!--<SatisfactoryFunctionThreshold>80</SatisfactoryFunctionThreshold> -->
   
  <!-- Threshold for acceptance criteria for coverage reports detailing acceptable function coverage levels. Default is 80% -->
  <!--<SatisfactoryFunctionThreshold>80</SatisfactoryFunctionThreshold> -->
 
  <!-- Filtering to be applied to the results. Use integer or named value. Default is "None". Possible values:
	"None" (0),
	"HideUnvisited" (1), 
	"HideFullyCovered" (2),
	"HideThresholdCovered" (3)
   -->
  <TreeFilterStyle>None</TreeFilterStyle>
  
  <!-- Sorting to be applied to the results. Use integer or named value. Default is "Name". Possible values:
	"Name" (0),
	"ClassLine" (1), 
	"CoveragePercentageAscending" (2), "CoveragePercentageDescending" (3),
	"UnvisitedSequencePointsAscending" (4), "UnvisitedSequencePointsDescending" (5), 
	"VisitCountAscending" (6), "VisitCountDescending" (7)
	"FunctionCoverageAscending" (8), "FunctionCoverageDescending" (9),
   -->
  <TreeSortStyle>Name</TreeSortStyle>
  
  <!-- Coverage exclusions to exclude specified assemblies, namespaces and/or classes. -->
  <CoverageExclusions>
    <CoverageExclusion>
      <ExclusionType>Assembly</ExclusionType>
      <!-- Valid values are [Assembly], [Namespace] and [Class]. -->
      <Pattern>*.Tests</Pattern>
      <IsRegex>false</IsRegex>
      <!-- Only required with a value of "true" if you do have a regular expression based pattern -->
    </CoverageExclusion>
    <CoverageExclusion>
      <ExclusionType>Namespace</ExclusionType>
      <Pattern>*.My*</Pattern>
    </CoverageExclusion>
  </CoverageExclusions>
  
  <!-- Module specific coverage thresholds if any, -->
  <!--<ModuleThresholds>
    <ModuleThreshold ModuleName="NCoverExplorer.Core.dll" SatisfactoryCoverage="30" />
  </ModuleThresholds>-->
   
  <!-- Whether to return a failure exit code if any module is below the minimum coverage threshold. Default is false. -->
  <!--<FailIfBelowMinimum>True</FailIfBelowMinimum> -->
  
  <!-- Whether to return a failure exit code if total coverage is below the minimum coverage threshold. Default is false. -->
  <!--<FailIfBelowCombinedMinimum>True</FailIfBelowCombinedMinimum> -->
  
  <!-- For use with the FailIfXXX options - the minimum coverage threshold if not specifying at the module level. -->
  <!--<MinimumCoverage>True</MinimumCoverage> -->
  
  <!-- Whether to suppress virtually all console output when running. Default is false. -->
  <!--<NoLog>True</NoLog> -->
  
</ConsoleSetting>